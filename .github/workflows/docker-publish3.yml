name: Docker test new

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:      
  workflow_dispatch:
    inputs:
      name:
        description: "TAG"
        required: true
        default: "master"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_NAME: edu13-backend
  GIT_OPS_NAME: edu13-gitops
  GIT_EMAIL: shclub@gmail.com
  GIT_OPS_URL: github.com/${{ github.actor }}/${{ env.GIT_OPS_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    container:
      image: shclub/build-tool:v1.0.0
      options: -u root:root -v /var/run/docker.sock:/var/run/docker.sock  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build
        #uses: addnab/docker-run-action@v3
        #with:
        run: |
              pwd
              chmod 777 ./mvnw                             
              echo 'TAG => ' ${{ steps.meta.outputs.tags }}
              echo 'ENV => ' ${ENV}
              export SKAFFOLD_CACHE_ARTIFACTS=false
              skaffold build -p dev -t ${{ steps.meta.outputs.tags }}      
      - name: Kustomize
        run: |
              git clone https://${{ env.GIT_OPS_URL }}
              cd ./${{ env.GIT_OPS_NAME }}
              git checkout master
              kustomize edit set image ${{ github.actor }}/${{ env.PROJECT_NAME }}:${{ steps.meta.outputs.tags }}
              git config --global user.email "${{ env.GIT_EMAIL }}"
              git config --global user.name "${{ github.actor }}"                   
              git add .
              git commit -am 'update image tag ${{ steps.meta.outputs.tags }}'
              GIT_ASKPASS=true git push origin master
